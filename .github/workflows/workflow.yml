---
name: "workflow"

'on':
  push:
    branches:
      - main-workflow
    tags:
      - "*"
  pull_request:
    branches:
      - main-workflow

jobs:
  ci:
    name: "CI Integration"
    runs-on: "ubuntu-latest"
    # strategy:
    #   matrix:
    #     node-version: [14.x]
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install dependencies
        run: yarn

      - name: Run the tests
        run: yarn test
      
      - name: Build
        run: yarn build
      
      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  terraform-action:
    name: 'Terraform-Workflow'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '${GITHUB_REPOSITORY}/terraform/'
          tf_actions_comment: true
          args: '-var-file="dev.tfvars"'
        env:
          TF_WORKSPACE: dev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: '${GITHUB_REPOSITORY}/terraform/'

  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    needs:
      - ci
      - terraform-action
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}      