---
name: "workflow"

'on':
  push:
    branches:
      - main-workflow
    tags:
      - "*"
  pull_request:
    branches:
      - main-workflow

jobs:
  ci:
    name: "CI Integration"
    runs-on: "ubuntu-latest"
    # strategy:
    #   matrix:
    #     node-version: [14.x]
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Install dependencies
        run: yarn

      - name: Run the tests
        run: yarn test
      
      - name: Build
        run: yarn build
      
      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  terraform-action:
    name: 'Terraform-Workflow'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}   

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.0
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
          tf_actions_comment: true
        env:
          TF_WORKSPACE: dev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.0
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: 'terraform'
      
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.0
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'terraform'

      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.14.0
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: 'terraform'
          args: '-auto-approve -input=false'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        run: |
          docker build -t reactjs-image .
          docker tag reactjs-image $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"  
  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    needs:
      - ci
      - terraform-action
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}      